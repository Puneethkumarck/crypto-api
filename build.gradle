plugins {
	id 'java'
	id 'org.springframework.boot' version "$springbootVersion" apply false
	id 'io.spring.dependency-management' version '1.1.6' apply false
	id "com.diffplug.spotless" version "$spotlessVersion" apply false
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

allprojects {
	group = 'com.blockchain'
	repositories {
		mavenCentral()
	}
}

jacoco {
	toolVersion = "0.8.8"
}

// Aggregate Jacoco reports from all subprojects
tasks.register('jacocoRootReport', JacocoReport) {
	dependsOn subprojects.test

	executionData fileTree(dir: project.buildDir, includes: [
			'../api/build/jacoco/test.exec',
			'../app/build/jacoco/test.exec'
	])

	subprojects {
		sourceSets {
			main {
				java {
					srcDirs = files(sourceSets.main.allSource.srcDirs)
				}
			}
		}
	}

	reports {
		xml.required = true
		html.destination file("$buildDir/reports/jacocoRootReport/html")
		xml.destination file("$buildDir/reports/jacocoRootReport/jacocoTestReport.xml")
	}
}

sonar {
	properties {
		property "sonar.projectKey", "Puneethkumarck_crypto-api"
		property "sonar.organization", "ranganathasoftware"
		property "sonar.host.url", "https://sonarcloud.io"
		// Use the aggregated Jacoco XML report
		property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacocoRootReport/jacocoTestReport.xml"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'jacoco'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'com.diffplug.spotless'

	dependencies {
		implementation "org.mapstruct:mapstruct:$mapstructVersion"
		implementation 'com.fasterxml.jackson.core:jackson-databind'
		compileOnly 'org.projectlombok:lombok'

		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
		annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

		testCompileOnly 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.boot:spring-boot-testcontainers'
		testImplementation 'org.junit.jupiter:junit-jupiter'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		testAnnotationProcessor 'org.projectlombok:lombok'
		testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.3"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	spotless {
		java {
			googleJavaFormat() // Use Google's Java style
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
		finalizedBy jacocoTestReport
	}

	jacocoTestReport {
		reports {
			xml.required = true
		}
	}
}
